name: Build and publish to PyPI

on:
  release:
    types:
      - published
  # uncomment this during debugging
  # pull_request:
  #   branches: [ main ]

  # To run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  POETRY_VERSION: 1.8.3

jobs:
  build:
    name: Build distribution
    runs-on: ubuntu-latest
    steps:
    - name: Check out the code
      uses: actions/checkout@v4.1.1
    - name: Set up Python
      uses: actions/setup-python@v5.1.0
      with:
        python-version: "3.10"
    - name: Install Poetry
      uses: snok/install-poetry@v1.4.1
      with:
        version: ${{ env.POETRY_VERSION }}
        virtualenvs-create: true
        virtualenvs-in-project: true
    - name: Install dependencies
      run: |
        poetry install
    - name: Build a binary wheel and a source tarball
      run: |
        poetry build
    - name: Store the distribution packages
      uses: actions/upload-artifact@v4.4.0
      with:
        name: python-package-distributions
        path: dist/


  testpypi:
    name: Publish the distribution to TestPyPI
    needs:
    - build
    runs-on: ubuntu-latest

    environment:
      name: test-pypi

    permissions:
      id-token: write  # IMPORTANT: mandatory for trusted publishing

    steps:
    - name: Download all the dists
      uses: actions/download-artifact@v4.1.8
      with:
        name: python-package-distributions
        path: dist/
    - name: Publish distribution to TestPyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        repository-url: https://test.pypi.org/legacy/

  testpypi-qa:
    name: Test package installation from Test PyPI
    needs:
    - build
    - testpypi
    runs-on: ubuntu-latest
    steps:
    - name: Wait for Test PyPI to process the upload
      run: sleep 60  # Adjust the sleep duration if necessary
    - name: Set up Python
      uses: actions/setup-python@v5.1.0
      with:
        python-version: "3.10"
    - name: Test package installation from Test PyPI
      run: |
        pip install --index-url https://test.pypi.org/simple/ --extra-index-url https://pypi.org/simple pyside-demo
        python -c "import pyside_demo; print(pyside_demo.__version__)"

  pypi:
    name: Publish the distribution to PyPI
    needs:
    - build
    - testpypi
    - testpypi-qa
    runs-on: ubuntu-latest

    environment:
      name: pypi

    permissions:
      id-token: write  # IMPORTANT: mandatory for trusted publishing

    steps:
    - name: Download all the dists
      uses: actions/download-artifact@v4.1.8
      with:
        name: python-package-distributions
        path: dist/
    - name: Publish distribution to TestPyPI
      uses: pypa/gh-action-pypi-publish@release/v1
